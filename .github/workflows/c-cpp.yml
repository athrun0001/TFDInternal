name: Build and Release C++ Project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up MSBuild environment
    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1

    # Step 3: Build the project
    - name: Build Solution
      run: msbuild TFDInternal.sln /p:Configuration=Debug

    # Step 4: Archive build artifacts (optional)
    - name: Archive Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: x64\Debug

    # Step 1: Check out the code (required for versioning or tag creation)
    - name: Checkout code
      uses: actions/checkout@v3

    - name: List Files in Output Directory
      run: dir TFDInternal\x64\Debug

    # Step 2: Create a release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }} # Replace with your versioning logic
        release_name: Release v1.0.${{ github.run_number }}
        body: |
          Release notes for this version.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    # Step 3: Upload build artifacts to the release
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: x64\Debug\TFDInternal.dll
        asset_name: TFDInternal.dll
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
