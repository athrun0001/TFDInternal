#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SE_Bunny_GaugeDeltaBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "M1_classes.hpp"
#include "M1Data_structs.hpp"
#include "BunnyGaugeDeltaApplyPolicy_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C
// 0x0020 (0x0358 - 0x0338)
class USE_Bunny_GaugeDeltaBase_C : public UM1StatusEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EM1StatType                                   StatType;                                          // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBunnyGaugeDeltaApplyPolicy                   ApplyPolicy;                                       // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TickAccumulatdValue;                               // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTickCost;                                         // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnActiveTick(float DeltaSeconds);
	void GetTickRate(double* TickRate);
	void ExecuteUbergraph_SE_Bunny_GaugeDeltaBase(int32 EntryPoint);
	void ExecuteTickOperation(const struct FM1AbilityOperationParam& OpParam);
	void ExecutePeriodOperation(const struct FM1AbilityOperationParam& OpParam);
	void BP_OnPeriod();
	void BP_OnDeactivated(bool bCancelled);
	void BP_OnActivated();
	void Auth_ApplyOnTick(double OnTickValue);
	void Auth_ApplyOnPeriod(double AccumulatedValue);

	void MakeTickOpParam(double OpValue, struct FM1AbilityOperationParam* OpParam) const;
	void MakePeriodOpParam(double InDouble, struct FM1AbilityOperationParam* M1AbilityOperationParam) const;
	void GetCurrentTickAccumulatedValue(double* CurrentTickAccumulatedValue) const;
	void CanPerformTick(bool* bCanApply) const;
	void CanApplyOperation(bool* bCanApply, bool* bShouldConsume__Periodic_Only_) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SE_Bunny_GaugeDeltaBase_C">();
	}
	static class USE_Bunny_GaugeDeltaBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USE_Bunny_GaugeDeltaBase_C>();
	}
};

}

