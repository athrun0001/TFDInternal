#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SE_Bunny_GaugeDeltaBase

#include "Basic.hpp"

#include "SE_Bunny_GaugeDeltaBase_classes.hpp"
#include "SE_Bunny_GaugeDeltaBase_parameters.hpp"


namespace SDK
{

// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.OnActiveTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::OnActiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "OnActiveTick");

	Params::SE_Bunny_GaugeDeltaBase_C_OnActiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.GetTickRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TickRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::GetTickRate(double* TickRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "GetTickRate");

	Params::SE_Bunny_GaugeDeltaBase_C_GetTickRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TickRate != nullptr)
		*TickRate = Parms.TickRate;
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.ExecuteUbergraph_SE_Bunny_GaugeDeltaBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::ExecuteUbergraph_SE_Bunny_GaugeDeltaBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "ExecuteUbergraph_SE_Bunny_GaugeDeltaBase");

	Params::SE_Bunny_GaugeDeltaBase_C_ExecuteUbergraph_SE_Bunny_GaugeDeltaBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.ExecuteTickOperation
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FM1AbilityOperationParam         OpParam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void USE_Bunny_GaugeDeltaBase_C::ExecuteTickOperation(const struct FM1AbilityOperationParam& OpParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "ExecuteTickOperation");

	Params::SE_Bunny_GaugeDeltaBase_C_ExecuteTickOperation Parms{};

	Parms.OpParam = std::move(OpParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.ExecutePeriodOperation
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FM1AbilityOperationParam         OpParam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void USE_Bunny_GaugeDeltaBase_C::ExecutePeriodOperation(const struct FM1AbilityOperationParam& OpParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "ExecutePeriodOperation");

	Params::SE_Bunny_GaugeDeltaBase_C_ExecutePeriodOperation Parms{};

	Parms.OpParam = std::move(OpParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.BP_OnPeriod
// (Event, Public, BlueprintEvent)

void USE_Bunny_GaugeDeltaBase_C::BP_OnPeriod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "BP_OnPeriod");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.BP_OnDeactivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCancelled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::BP_OnDeactivated(bool bCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "BP_OnDeactivated");

	Params::SE_Bunny_GaugeDeltaBase_C_BP_OnDeactivated Parms{};

	Parms.bCancelled = bCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void USE_Bunny_GaugeDeltaBase_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.Auth_ApplyOnTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  OnTickValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::Auth_ApplyOnTick(double OnTickValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "Auth_ApplyOnTick");

	Params::SE_Bunny_GaugeDeltaBase_C_Auth_ApplyOnTick Parms{};

	Parms.OnTickValue = OnTickValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.Auth_ApplyOnPeriod
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AccumulatedValue                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::Auth_ApplyOnPeriod(double AccumulatedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "Auth_ApplyOnPeriod");

	Params::SE_Bunny_GaugeDeltaBase_C_Auth_ApplyOnPeriod Parms{};

	Parms.AccumulatedValue = AccumulatedValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.MakeTickOpParam
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  OpValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FM1AbilityOperationParam         OpParam                                                (Parm, OutParm, ContainsInstancedReference)

void USE_Bunny_GaugeDeltaBase_C::MakeTickOpParam(double OpValue, struct FM1AbilityOperationParam* OpParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "MakeTickOpParam");

	Params::SE_Bunny_GaugeDeltaBase_C_MakeTickOpParam Parms{};

	Parms.OpValue = OpValue;

	UObject::ProcessEvent(Func, &Parms);

	if (OpParam != nullptr)
		*OpParam = std::move(Parms.OpParam);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.MakePeriodOpParam
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  InDouble                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FM1AbilityOperationParam         M1AbilityOperationParam                                (Parm, OutParm, ContainsInstancedReference)

void USE_Bunny_GaugeDeltaBase_C::MakePeriodOpParam(double InDouble, struct FM1AbilityOperationParam* M1AbilityOperationParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "MakePeriodOpParam");

	Params::SE_Bunny_GaugeDeltaBase_C_MakePeriodOpParam Parms{};

	Parms.InDouble = InDouble;

	UObject::ProcessEvent(Func, &Parms);

	if (M1AbilityOperationParam != nullptr)
		*M1AbilityOperationParam = std::move(Parms.M1AbilityOperationParam);
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.GetCurrentTickAccumulatedValue
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  CurrentTickAccumulatedValue                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::GetCurrentTickAccumulatedValue(double* CurrentTickAccumulatedValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "GetCurrentTickAccumulatedValue");

	Params::SE_Bunny_GaugeDeltaBase_C_GetCurrentTickAccumulatedValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentTickAccumulatedValue != nullptr)
		*CurrentTickAccumulatedValue = Parms.CurrentTickAccumulatedValue;
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.CanPerformTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bCanApply                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::CanPerformTick(bool* bCanApply) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "CanPerformTick");

	Params::SE_Bunny_GaugeDeltaBase_C_CanPerformTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanApply != nullptr)
		*bCanApply = Parms.bCanApply;
}


// Function SE_Bunny_GaugeDeltaBase.SE_Bunny_GaugeDeltaBase_C.CanApplyOperation
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bCanApply                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldConsume__Periodic_Only_                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USE_Bunny_GaugeDeltaBase_C::CanApplyOperation(bool* bCanApply, bool* bShouldConsume__Periodic_Only_) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SE_Bunny_GaugeDeltaBase_C", "CanApplyOperation");

	Params::SE_Bunny_GaugeDeltaBase_C_CanApplyOperation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanApply != nullptr)
		*bCanApply = Parms.bCanApply;

	if (bShouldConsume__Periodic_Only_ != nullptr)
		*bShouldConsume__Periodic_Only_ = Parms.bShouldConsume__Periodic_Only_;
}

}

